unit CP.Quantizer;
{$IFDEF FPC}
{$MODE delphi}
{$ENDIF}

interface

uses
    Classes, SysUtils;

type

    { TQuantizer }

    TQuantizer = class(TObject)
    private
        FT0, FT1, FT2: double;
    public
        property t0: double read FT0 write FT0;
        property t1: double read FT1 write FT1;
        property t2: double read FT2 write FT2;
    public
        constructor Create(t0: double = 0.0; t1: double = 0.0; t2: double = 0.0);
        function Quantize(Value: double): integer;
    end;

implementation

{ TQuantizer }

constructor TQuantizer.Create(t0: double; t1: double; t2: double);
begin
    FT0 := t0;
    FT1 := t1;
    m_t2 := t2;
end;

function TQuantizer.Quantize(Value: double): integer;
begin
    if (Value < FT1) then
    begin
        if (Value < FT0) then
            Result := 0
        else
            Result := 1;
    end
    else
    begin
        if (Value < FT2) then
            Result := 2
        else
            Result := 3;
    end;
end;

end.
